using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Data;
using System.Windows.Documents;
using System.Windows.Input;
using System.Windows.Media;
using System.Windows.Media.Imaging;
using System.Windows.Navigation;
using System.Windows.Shapes;
using GreenFox;

namespace Drawing
{
    public partial class MainWindow : Window
    {
        public MainWindow()
        {
            InitializeComponent();
            var foxDraw = new FoxDraw(canvas);
            // create a line drawing function that takes 2 parameters:
            // the x and y coordinates of the line's starting point
            // and draws a line from that point to the center of the canvas.
            // fill the canvas with lines from the edges, every 20 px, to the center.

            double startingX = 0;
            double startingY = 0;

            Point center = new Point(canvas.Width / 2, canvas.Height / 2);

            foxDraw.StrokeColor(Colors.Teal);

            for (int i = 0; i <= canvas.Width; i += 20) // I wanted to practice nested loops...
            {
                Point startingUpside = new Point(startingX + i, startingY);
                foxDraw.DrawLine(startingUpside, center);

                if (i == canvas.Width)
                {
                    startingX = canvas.Width;
                    for (int j = 0; j <= canvas.Height; j += 20)
                    {
                        Point startingRightside = new Point(startingX, startingY + j);
                        foxDraw.DrawLine(startingRightside, center);

                        if (j == canvas.Height)
                        {
                            startingY = canvas.Height;
                            for (int k = (int)canvas.Width; k >= 0; k -= 20)
                            {
                                Point startingDownside = new Point(startingX - k, startingY);
                                foxDraw.DrawLine(startingDownside, center);

                                if (k == 0)
                                {
                                    startingX = 0;
                                    for (int l = (int)canvas.Height; l >= 0; l -= 20)
                                    {
                                        Point startingLeftside = new Point(startingX, startingY - l);
                                        foxDraw.DrawLine(startingLeftside, center);
                                    }
                                }
                            }
                        }
                    }
                }
            } 
            /*
            foxDraw.StrokeColor(Colors.Yellow);

            double radius = 900;

            for (int i = 0; i <= 360; i += 9)
            {
                startingX = radius * Math.Sin(i / 9);
                startingY = radius * Math.Cos(i / 9);
                Point startingPoint = new Point(startingX, startingY);

                foxDraw.DrawLine(startingPoint, center);
            }
            */
        }
    }
}